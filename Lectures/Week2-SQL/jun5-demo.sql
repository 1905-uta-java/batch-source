/* multiline comment */

-- single line comment

-----------------------------------------
-- USING DDL TO CREATE TABLES
-----------------------------------------

CREATE TABLE DEPARTMENT(
    DEPT_ID NUMBER(5) CONSTRAINT PK_DEPT PRIMARY KEY,
    DEPT_NAME VARCHAR2(50),
    MONTHLY_BUDGET NUMBER(5,2)
);

CREATE TABLE EMPLOYEE(
    EMP_ID NUMBER(5) PRIMARY KEY,
    EMP_NAME VARCHAR2(50),
    MONTHLY_SALARY NUMBER(5,2) NOT NULL,
    EMP_POSITION VARCHAR2(20),
    MANAGER_ID NUMBER(5),
    DEPT_ID NUMBER(5) CONSTRAINT FK_EMP_DEPT REFERENCES DEPARTMENT
);

ALTER TABLE DEPARTMENT
MODIFY MONTHLY_BUDGET NUMBER(9,2);

ALTER TABLE EMPLOYEE 
MODIFY MONTHLY_SALARY NUMBER(7,2);

-- THIS WOULD NOT INSERT BECAUSE WE DO NOT YET HAVE ANY DEPARMENTS TO REFERENCE 
INSERT INTO EMPLOYEE VALUES(1,'JOHN SMITH', 2800, 'MK_REP', NULL, NULL);
ROLLBACK;

INSERT INTO DEPARTMENT VALUES (1, 'MARKETING', 9000);
INSERT INTO DEPARTMENT VALUES (2, 'HUMAN RESOURCES', 8000);
INSERT INTO DEPARTMENT VALUES (3, 'ACCOUNTING', 5800);
INSERT INTO DEPARTMENT VALUES (4, 'INFORMATION TECHNOLOGY', 3500);
INSERT INTO DEPARTMENT VALUES (5, 'LEGAL', 5800);
INSERT INTO DEPARTMENT (DEPT_ID, DEPT_NAME) VALUES (6, 'SALES');

COMMIT;

UPDATE DEPARTMENT
SET MONTHLY_BUDGET = 5000
WHERE DEPT_ID = 6;

ROLLBACK;

SELECT *
FROM DEPARTMENT;

SELECT DEPT_ID , DEPT_NAME , MONTHLY_BUDGET 
FROM DEPARTMENT;

SELECT DEPT_NAME AS DEPARTMENT
FROM DEPARTMENT;

DROP TABLE DEPARTMENT;

ALTER TABLE EMPLOYEE 
DROP CONSTRAINT FK_EMP_DEPT;

-- RE ADD OUR FK BETWEEN EMPLOYEES AND OUR DEPARTMENTS
ALTER TABLE EMPLOYEE 
ADD CONSTRAINT FK_EMP_DEPT
FOREIGN KEY (DEPT_ID) REFERENCES DEPARTMENT(DEPT_ID) ON DELETE CASCADE;


TRUNCATE TABLE EMPLOYEE;

INSERT INTO EMPLOYEE VALUES(1,'John Smith', 2800, 'MK_REP', NULL, 1);
INSERT INTO EMPLOYEE VALUES(2,'Margy Michiel', 2800, 'ACCT', 10, 3);
INSERT INTO EMPLOYEE VALUES(3,'Lodovico Eefting', 3200, 'HR_REP', 6, 2);
INSERT INTO EMPLOYEE VALUES(4,'Harriet Mathewson', 2900, 'LAWYER', NULL, 5);
INSERT INTO EMPLOYEE VALUES(5,'Constance Wooderson', 3050, 'ACCT', 10, 3);
INSERT INTO EMPLOYEE VALUES(6,'Leonhard Ward', 4000, 'HR_REP', NULL, 2);
INSERT INTO EMPLOYEE VALUES(7,'Alanah Seago', 3250, 'IT_REP', NULL, 4);
INSERT INTO EMPLOYEE VALUES(8,'Barbie Feye', 2950, 'SALES_REP', 9, 6);
INSERT INTO EMPLOYEE VALUES(9,'Adrea McArt', 3880, 'SALES_MNGR', NULL, 6);
INSERT INTO EMPLOYEE VALUES(10,'Perri Parmer', 4800, 'ACCT_MNGR', NULL, 3);

COMMIT;

UPDATE EMPLOYEE
SET EMP_POSITION='HR_MNGR'
WHERE EMP_ID = 6;

DELETE FROM EMPLOYEE 
WHERE MONTHLY_SALARY>3999;

----------------------------------
-- MORE QUERIES W DQL
----------------------------------
SELECT EMP_NAME, MONTHLY_SALARY, EMP_POSITION
FROM EMPLOYEE
WHERE EMP_ID = 6;

SELECT COUNT(EMP_ID) TOTAL_EMPLOYEES
FROM EMPLOYEE;

SELECT *
FROM EMPLOYEE
WHERE EMP_NAME LIKE 'L%'
ORDER BY MONTHLY_SALARY DESC;

SELECT AVG(MONTHLY_SALARY) AVG_SALARY, DEPT_ID
FROM EMPLOYEE 
WHERE EMP_ID>5 -- FILTERS DATA BEFORE AGGREGATION
GROUP BY DEPT_ID -- DETERMINES HOW OUR DATA IS AGGREGATED
HAVING DEPT_ID>3 -- FILTERS DATA AFTER AGGREGATION
ORDER BY AVG_SALARY; -- DETERMINES THE ORDER AT WHICH OUR RESULTS ARE DISPLAYED

SELECT *
FROM EMPLOYEE
WHERE DEPT_ID=1 OR DEPT_ID=3 OR DEPT_ID=5;

SELECT *
FROM EMPLOYEE
WHERE DEPT_ID IN (1,3,5);

SELECT *
FROM EMPLOYEE 
WHERE MONTHLY_SALARY =
    (SELECT MAX(MONTHLY_SALARY) 
    FROM EMPLOYEE);
    
COMMIT;
