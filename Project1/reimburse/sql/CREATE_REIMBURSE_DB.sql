/*******************************
   Drop database if it exists
********************************/
DROP USER REIMBURSE_DB CASCADE;
 
 
/*******************************
   Create database
********************************/
CREATE USER REIMBURSE_DB
IDENTIFIED BY password
DEFAULT TABLESPACE users
TEMPORARY TABLESPACE temp
QUOTA 10M ON users;
 
GRANT connect to REIMBURSE_DB;
GRANT resource to REIMBURSE_DB;
GRANT create session TO REIMBURSE_DB;
GRANT create table TO REIMBURSE_DB;
GRANT create view TO REIMBURSE_DB;


/*******************************
   CREATE TABLE EMPLOYEE
********************************/
conn REIMBURSE_DB/password

CREATE TABLE EMPLOYEE (
    ID NUMBER(10) NOT NULL,
    FIRST_NAME VARCHAR2(255) NOT NULL,
    LAST_NAME VARCHAR2(255) NOT NULL,
    POSITION VARCHAR2(255) NOT NULL,
	START_DATE TIMESTAMP NOT NULL,
    LOCATION VARCHAR2(255) NOT NULL,
	SALARY NUMBER(9,2) NOT NULL
);

ALTER TABLE EMPLOYEE
    ADD (
    CONSTRAINT STUDENT_PK PRIMARY KEY (ID)
);
-- CREATE AUTO INCREMENT ID FOR PK 
CREATE SEQUENCE EMPLOYEE_SEQ;
 
CREATE OR REPLACE TRIGGER EMPLOYEE_INSERT
    BEFORE INSERT ON EMPLOYEE
    FOR EACH ROW
BEGIN
    SELECT EMPLOYEE_SEQ.NEXTVAL
    INTO :NEW.ID
    FROM DUAL;
END; 

/*******************************
   CREATE TABLE REIMBURSEMENT
********************************/
CREATE TABLE REIMBURSEMENT (
	ID NUMBER(10) NOT NULL, 
	CATEGORY VARCHAR2(255) NOT NULL, 
	STATUS VARCHAR2(255) NOT NULL, 
	AMOUNT NUMBER(9,2) NOT NULL,
	DATE_SUBMITTED TIMESTAMP NOT NULL, 
	APPROVING_MGR_ID NUMBER(10), 
	DATE_APPROVED TIMESTAMP,
	EMPLOYEEID NUMBER(10) NOT NULL
);
 
ALTER TABLE REIMBURSEMENT
    ADD (
    CONSTRAINT REIMBURSEMENT_PK PRIMARY KEY (ID)
);
-- CREATE AUTO INCREMENT ID FOR PK 
CREATE SEQUENCE REIMBURSEMENT_SEQ;
 
CREATE OR REPLACE TRIGGER REIMBURSEMENT_INSERT
    BEFORE INSERT ON REIMBURSEMENT
    FOR EACH ROW
BEGIN
    SELECT REIMBURSEMENT_SEQ.NEXTVAL
    INTO :NEW.ID
    FROM DUAL;
END; 

/*******************************
   CREATE TABLE USER
********************************/
CREATE TABLE USER_EMPLOYEE (
    ID NUMBER(10) NOT NULL,
    USER_NAME VARCHAR2(255) NOT NULL, 
    USER_PASSWORD VARCHAR2(255) NOT NULL,
    USER_ROLE VARCHAR2(255) NOT NULL
);
ALTER TABLE USER_EMPLOYEE
    ADD (
    CONSTRAINT USER_EMPLOYEE_PK PRIMARY KEY (ID)
);
-- CREATE AUTO INCREMENT ID FOR PK 
CREATE SEQUENCE USER_EMPLOYEE_SEQ;
 
CREATE OR REPLACE TRIGGER USER_EMPLOYEE_INSERT
    BEFORE INSERT ON USER_EMPLOYEE
    FOR EACH ROW
BEGIN
    SELECT USER_EMPLOYEE_SEQ.NEXTVAL
    INTO :NEW.ID
    FROM DUAL;
END; 

