-----------------------------------------------------------
--Quieries and DML 2.0
-----------------------------------------------------------
--2.1.A
SELECT * 
FROM EMPLOYEE;
--2.1.B
SELECT *
FROM EMPLOYEE
WHERE LASTNAME = 'King';
--2.1.C
SELECT *
FROM EMPLOYEE
WHERE FIRSTNAME = 'Andrew' AND REPORTSTO IS NULL;
--2.1.D
SELECT *
FROM ALBUM
ORDER BY TITLE DESC;
--2.1.E
SELECT FIRSTNAME
FROM CUSTOMER
ORDER BY CITY;
--2.1.F
SELECT *
FROM INVOICE 
WHERE BILLINGADDRESS LIKE 'T%';


--2.2.A
INSERT INTO GENRE VALUES (26, 'Funny');
INSERT INTO GENRE VALUES (27, 'AUSTRAILIAN PSYCHEDLIC ROCK');
--2.2.B
INSERT INTO EMPLOYEE VALUES (9, 'Fisk', 'Wilson', 'Receptionist', null, '04-FEB-79', '22-JUL-04', '111 Main Street', 'Edmondton', 'AB', 'Canada', 'T5K 2N1', '+1 860-867-5209', '+1 860-546-0000', 'totallyNotKingpin@notAVillian.org');
INSERT INTO EMPLOYEE VALUES (10, 'Matt', 'Murdock', 'Receptionist', 9, '05-FEB-83', '23-JUL-04', '112 Main Street', 'Edmondton', 'AB', 'Canada', 'T5K 2N1', '+1 860-123-4567', '+1 860-098-6554', 'totallyNotDaredevil@notAHero.gov');
--2.2.C
INSERT INTO CUSTOMER VALUES (60, 'Barbie', 'Ken', 'America','113 Main Street', 'Edmondton', 'AB', 'Canada', 'T5K 2N1', '+1 860-867-5209', '+1 860-546-0000', 'totallyAmKingpin@totallyAVillian.org', 5);
INSERT INTO CUSTOMER VALUES (61, 'Withim', 'Imma', 'Receptionist','141 Main Street', 'Edmondton', 'AB', 'Canada', 'T5K 2N1', '+1 860-867-5209', '+1 860-546-0000', 'yourAverageEverydayGuyHere@normalPerson.com', 4);

--2.3.A
UPDATE CUSTOMER
SET CUSTOMER.FIRSTNAME='Robert', CUSTOMER.LASTNAME='Walter'
WHERE CUSTOMER.FIRSTNAME='Aaron' AND CUSTOMER.LASTNAME='Mitchell';
--2.3.B
UPDATE ARTIST
SET ARTIST.NAME = 'CCR'
WHERE ARTIST.NAME = 'Creedence Clearwater Revival';

-------------------------------------------------------------
--3.0 Joins
-------------------------------------------------------------
--3.1.A INNER
SELECT C.FIRSTNAME AS NAME, I.INVOICEID AS INVOICE
FROM CUSTOMER C
JOIN INVOICE I
ON C.CUSTOMERID = I.CUSTOMERID;
--3.2.A OUTTER
SELECT C.CUSTOMERID AS ID, C.FIRSTNAME, C.LASTNAME, I.INVOICEID AS INVOICE, I.TOTAL AS TOTAL
FROM CUSTOMER C
FULL OUTER JOIN INVOICE I
ON C.CUSTOMERID = I.CUSTOMERID;
--3.3.A RIGHT
SELECT ART.NAME AS NAME, ALB.TITLE
FROM ARTIST ART
RIGHT JOIN ALBUM ALB
ON ART.ARTISTID = ALB.ARTISTID;
--3.4.A CROSS
SELECT ART.NAME AS NAME
FROM ARTIST ART
CROSS JOIN ALBUM ALB
ORDER BY ART.NAME;
--3.5.A SELF
SELECT E1.FIRSTNAME AS EMPLOYEE, E2.FIRSTNAME AS MANAGER
FROM EMPLOYEE E1, EMPLOYEE E2
WHERE E1.REPORTSTO = E2.EMPLOYEEID;
--3.6.A JOINED QUERIES PART A
SELECT C.FIRSTNAME||' '||C.LASTNAME AS FULL_NAME, I.TOTAL AS MONEY_SPENT
FROM CUSTOMER C
JOIN INVOICE I
ON C.CUSTOMERID = I.CUSTOMERID;
--3.6.B
SELECT FIRSTNAME EMPLOYEE ,total TOTAL
FROM (SELECT E.FIRSTNAME, SUM(I.TOTAL) TOTAL
FROM EMPLOYEE E 
FULL OUTER JOIN CUSTOMER C
ON C.SUPPORTREPID = E.EMPLOYEEID
FULL OUTER JOIN INVOICE I
ON I.CUSTOMERID = C.CUSTOMERID
WHERE TOTAL IS NOT NULL 
GROUP BY E.FIRSTNAME
ORDER BY TOTAL DESC)
WHERE ROWNUM = 1;


--3.6.C 
SELECT G.NAME GENRE, COUNT(IL.INVOICEID) PURCHASES
FROM GENRE G
FULL OUTER JOIN TRACK T
ON G.GENREID = T.GENREID
FULL OUTER JOIN INVOICELINE IL
ON  IL.TRACKID = T.TRACKID
GROUP BY G.NAME
ORDER BY PURCHASES DESC;

-----------------------------------------------------------------------
--4.0 FUNCTIONS
-----------------------------------------------------------------------
--4.1.A
CREATE OR REPLACE FUNCTION SHOW_THE_CURRENT_TIME
RETURN VARCHAR2
IS
BEGIN
    RETURN TO_CHAR(CURRENT_DATE, 'HH24:MI:SS');
END;

SELECT SHOW_THE_CURRENT_TIME
FROM DUAL;
--4.1.B
CREATE OR REPLACE FUNCTION GET_MEDIA_LENGTH(Y IN NUMBER)
RETURN NUMBER
IS
X NUMBER;
BEGIN
    SELECT LENGTH(NAME)
    INTO X
    FROM CHINOOK.MEDIATYPE
    WHERE MEDIATYPEID = Y;
    RETURN X;
END;

SELECT GET_MEDIA_LENGTH(2)
FROM DUAL;
--4.2.A
CREATE OR REPLACE FUNCTION TOTAL_OF_ALL_INVOICES
RETURN NUMBER
IS
X NUMBER;
BEGIN
    SELECT SUM(TOTAL)
    INTO X
    FROM CHINOOK.INVOICE;
    RETURN X;
END;

SELECT TOTAL_OF_ALL_INVOICES as total
FROM DUAL;

--4.2.B
CREATE OR REPLACE FUNCTION GET_HIGHEST_DOLLAR_TRACK
RETURN NUMBER
IS 
X NUMBER;
BEGIN

    SELECT MAX(UNITPRICE)
    INTO X
    FROM CHINOOK.INVOICELINE;
    RETURN X;
END;

SELECT GET_HIGHEST_DOLLAR_TRACK
FROM DUAL;

--4.3.A
CREATE OR REPLACE FUNCTION AVG_PRICES
RETURN NUMBER
IS
X NUMBER;
BEGIN
    SELECT AVG(TOTAL)
    INTO X
    FROM CHINOOK.INVOICE;
    RETURN X;
END;
SELECT AVG_PRICES()
FROM DUAL;
--4.4.A
CREATE OR REPLACE FUNCTION CURSOR_OF_DOB
RETURN SYS_REFCURSOR
IS
S SYS_REFCURSOR;
BEGIN
    OPEN S FOR
    SELECT EMPLOYEEID, BIRTHDATE
    FROM CHINOOK.EMPLOYEE
    WHERE CHINOOK.EMPLOYEE.BIRTHDATE > TO_DATE('31-DEC-1968', 'DD-MM-YYYY');
    RETURN S;
END;
    
SELECT CURSOR_OF_DOB
FROM DUAL;

----------------------------------------------------------------------------
--5.0
----------------------------------------------------------------------------
--5.1.A
CREATE OR REPLACE PROCEDURE FIRST_AND_LAST (S OUT SYS_REFCURSOR)
AS
BEGIN
OPEN S FOR
SELECT FIRSTNAME FROM CHINOOK.EMPLOYEE;
END;


--5.2.A
CREATE OR REPLACE PROCEDURE UPDATE_EMPLOYEE(I NUMBER, FN VARCHAR2, LN VARCHAR2)
AS
BEGIN 
    UPDATE EMPLOYEE
    SET FIRSTNAME = FN,
    LASTNAME = LN
    WHERE EMPLOYEEID = 1;
 END;
--5.2.B
CREATE OR REPLACE PROCEDURE GET_MANAGER(EMP NUMBER, MANID OUT NUMBER)
IS
BEGIN
    SELECT REPORTSTO
    INTO MANID
    FROM EMPLOYEE
    WHERE EMPLOYEEID = EMP;
END;
--5.3.A
CREATE OR REPLACE PROCEDURE GET_CUSTOMER_COMPANY(I NUMBER, C OUT VARCHAR2)
IS
BEGIN
    SELECT COMPANY
    INTO C
    FROM CUSTOMER
    WHERE CUSTOMERID = I;
END;
-------------------------------------------------------------------------------------
--6.0
--------------------------------------------------------------------------------------
--6.0.A
CREATE OR REPLACE PROCEDURE DELETE_INVOICE(I NUMBER)
AS
BEGIN
    DELETE FROM INVOICE
    WHERE INVOICEID = I;
    COMMIT;
END;
--6.0.B
CREATE OR REPLACE PROCEDURE NEW_CUTOMER(CID NUMBER, FN VARCHAR2, LN VARCHAR2, C VARCHAR2, ADDR VARCHAR2, 
                                            ST VARCHAR2, CO VARCHAR2, POST VARCHAR2, P VARCHAR2, F VARCHAR2, 
                                            EMA VARCHAR2, SUPID NUMBER)
IS
BEGIN
    INSERT INTO CUSTOMER VALUES(CID, FN, LN, C, ADDR, ST, CO, POST, P, F, EMA, SUPID);
END;
-----------------------------------------------------------------------------------------------------------------
--7.0
------------------------------------------------------------------------------------------------------------------
--7.1.A
CREATE OR REPLACE TRIGGER AFTER_EMPLOYEE_ADDED
    AFTER INSERT ON EMPLOYEE
DECLARE
BEGIN
    IF INSERTING THEN
        DBMS_OUTPUT.PUT_LINE('EMPLOYEE ADDED');
    END IF;
END;
--7.1.B
CREATE OR REPLACE TRIGGER AFTER_UPDATE_ALBUM
    AFTER UPDATE ON ALBUM
DECLARE
BEGIN
    IF UPDATING THEN
        DBMS_OUTPUT.PUT_LINE('ALBUM UPDATED');
    END IF;
END;
--7.1.C
CREATE OR REPLACE TRIGGER AFTER_DELETE_CUSTOMER
    AFTER DELETE ON CUSTOMER
DECLARE
BEGIN
    IF DELETING THEN
        DBMS_OUTPUT.PUT_LINE('CUSTOMER DELETED');
    END IF;
END;

















